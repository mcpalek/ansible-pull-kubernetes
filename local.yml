---
- hosts: localhost
  connection: local
  become: true
  tasks:
    - name: install helm if it does not exist
      unarchive:
        src: https://get.helm.sh/{{ helm_version }}
        dest: /usr/local/bin
        extra_opts: --strip-components=1
        owner: root
        group: root
        mode: 755
        remote_src: true
      args:
        creates: /usr/local/bin/helm
    - name: Update all Debian/Ubuntu packages to their latest version
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
        name: "*"
        state: latest
      when:
        - ansible_distribution in ["Debian", "Ubuntu"]
    - name: Update all RedHat/CentOs/Rocky packages to their latest version
      ansible.builtin.dnf:
        update_cache: true
        name: "*"
        state: latest
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Remove podman
      shell: |
        dnf remove podman.x86_64 -y
        dnf autoremove -y
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Uninstall old Docker versions
      dnf:
        name:
          - docker-client
          - docker-client-latest
          - docker-common
          - docker-latest
          - docker-latest-logrotate
          - docker-logrotate
          - docker-engine
        state: absent
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Set up docker repository for Rocky
      shell: |
       dnf install -y yum-utils
       yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Set up docker repository for Ubuntu
      shell: |
        apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates 
        curl -fsSL  https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      when:
        - ansible_distribution in ["Debian", "Ubuntu"]
    - name: Install the latest version of Docker Engine and containerd all OS
      package:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
    - name: Add the current user to the docker group
      user:
        name: $USER
        groups: docker
        append: yes
    - name: Start and enable docker
      systemd:
        name: docker
        state: started
        enabled: yes
    - name: Disable SELinux
      selinux:
        state: disabled
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Add kubernetes Repo to RedHat/CentOs/Rocky
      shell: |
        cat <<EOF > /etc/yum.repos.d/kubernetes.repo
        [kubernetes]
        name=Kubernetes
        baseurl=https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/
        enabled=1
        gpgcheck=1
        gpgkey=https://pkgs.k8s.io/core:/stable:/{{ repo_version }}/rpm/repodata/repomd.xml.key
        exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni

      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Upgrade all packages
      yum: name=* state=latest
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Install Kubernetes Package
      shell: |
       dnf install -y kubelet-{{ rocky_kubernetes_version }} kubeadm-{{ rocky_kubernetes_version }} kubectl-{{ rocky_kubernetes_version }} --disableexcludes=kubernetes
       dnf install containerd.io
       sudo systemctl enable --now kubelet
       sudo containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
       sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
       rm /etc/containerd/config.toml
       systemctl restart containerd
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: DisaBle Firewall
      shell: |
        sudo systemctl stop firewalld
        sudo systemctl disable firewalld
      when:
        - ansible_distribution in ["Rocky", "CentOs" ,"RedHat"]
    - name: Add kubernetes Repo to Debian/Ubuntu
      shell: |
       curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
       echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list
       apt update    
      when:
        - ansible_distribution in ["Debian", "Ubuntu"]
    - name: Install kubernetes on Debian/Ubuntu
      shell: apt install -y kubelet={{ ubuntu_kubernetes_version }} kubeadm={{ ubuntu_kubernetes_version }} kubectl={{ ubuntu_kubernetes_version }}
      when:
        - ansible_distribution in ["Debian", "Ubuntu"]
    - name: Disable Swap
      shell: |
        sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
        sudo swapoff -a